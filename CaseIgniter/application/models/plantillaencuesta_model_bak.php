<?php
/**
* Model code autogenerated by CASE IGNITER
*/
class plantillaencuesta_model extends CI_Model {


	/**
	* create MODEL action autogenerated by CASE IGNITER
	*/
	public function create( $nombre, $asociaa, $componepc, $componepa, $acercade ) {

	$bean = R::dispense( 'plantillaencuesta' );


	// Regular attribute
	$bean -> setMeta("buildcommand.unique" , array(array('nombre')) );
	$bean -> nombre = $nombre;
					
	// "many to many" attribute
	foreach ($asociaa as $id) {
		$another_bean = R::load('imparticion', $id);
		$m2m = R::dispense('asociaa');
		R::store($bean);
		$m2m -> plantillaencuesta = $bean;
		$m2m -> imparticion = $another_bean;
		R::store($m2m);
	}
				
									
	// "one to many" attribute
	foreach ($componepc as $id) {
		$o2m = R::load('preguntacerrada', $id);
		$bean -> alias('componepc') ->ownPreguntacerradaList[] = $o2m;
	}
				
									
	// "one to many" attribute
	foreach ($componepa as $id) {
		$o2m = R::load('preguntaabierta', $id);
		$bean -> alias('componepa') ->ownPreguntaabiertaList[] = $o2m;
	}
				
									
	// "one to many" attribute
	foreach ($acercade as $id) {
		$o2m = R::load('encuesta', $id);
		$bean -> alias('acercade') ->ownEncuestaList[] = $o2m;
	}
				
				
	R::store($bean);

	return $bean->id;
}


	/**
	* update MODEL action autogenerated by CASE IGNITER
	*/
	public function update( $id, $nombre, $asociaa, $componepc, $componepa, $acercade ) {

	$bean = R::load( 'plantillaencuesta', $id );


	// Regular attribute
	$bean -> nombre = $nombre;
				
	// "many to many" attribute (M2M)
	
	foreach ($bean->ownAsociaaList as $asociaa_bean ) {
		$key = array_search( $asociaa_bean->imparticion->id, $asociaa );
		
		if ($key !== false) { // M2M we keep only the keys to add
			unset($asociaa[$key]);
		}
		else { // M2M Element to be deleted
			R::store($bean);
			R::trash($asociaa_bean);
		}
	}

	// M2M Elements to be added
	foreach ($asociaa as $idf) {
		$another_bean = R::load('imparticion', $idf);
		$m2m = R::dispense('asociaa');
		$m2m -> plantillaencuesta = $bean;
		$m2m -> imparticion = $another_bean;
		R::store($m2m);
	}

					
	// "one to many" attribute (O2M)

	foreach ($bean->alias('componepc')->ownPreguntacerradaList as $componepc_bean ) {
		$key = array_search( $componepc_bean->componepc->id, $componepc );
		
		if ($key !== false) { // O2M we keep only the keys to add
			unset($componepc[$key]);
		}
		else { // O2M Element to be deleted
			R::store($bean);
			$componepc_bean -> componepc = null;
			R::store($componepc_bean);
		}
	}

	// O2M Elements to be added
	foreach ($componepc as $idf) {
		$o2m = R::load('preguntacerrada', $idf);
		$o2m -> componepc = $bean;
		R::store($o2m);
	}

				
	// "one to many" attribute (O2M)

	foreach ($bean->alias('componepa')->ownPreguntaabiertaList as $componepa_bean ) {
		$key = array_search( $componepa_bean->componepa->id, $componepa );
		
		if ($key !== false) { // O2M we keep only the keys to add
			unset($componepa[$key]);
		}
		else { // O2M Element to be deleted
			R::store($bean);
			$componepa_bean -> componepa = null;
			R::store($componepa_bean);
		}
	}

	// O2M Elements to be added
	foreach ($componepa as $idf) {
		$o2m = R::load('preguntaabierta', $idf);
		$o2m -> componepa = $bean;
		R::store($o2m);
	}

				
	// "one to many" attribute (O2M)

	foreach ($bean->alias('acercade')->ownEncuestaList as $acercade_bean ) {
		$key = array_search( $acercade_bean->acercade->id, $acercade );
		
		if ($key !== false) { // O2M we keep only the keys to add
			unset($acercade[$key]);
		}
		else { // O2M Element to be deleted
			R::store($bean);
			$acercade_bean -> acercade = null;
			R::store($acercade_bean);
		}
	}

	// O2M Elements to be added
	foreach ($acercade as $idf) {
		$o2m = R::load('encuesta', $idf);
		$o2m -> acercade = $bean;
		R::store($o2m);
	}


	R::store($bean);
}


	/**
	* get_all MODEL action autogenerated by CASE IGNITER
	*/
	public function get_all() {
		return R::findAll('plantillaencuesta');
	}

	/**
	* get_filtered MODEL action autogenerated by CASE IGNITER
	*/
	public function get_filtered($filter) {

		$where_clause[] = 'nombre LIKE ?';
		$where_clause[] = '(SELECT nombre FROM imparticion WHERE imparticion.id = plantillaencuesta.id) LIKE ?';
		$where_clause[] = '(SELECT nombre FROM preguntacerrada WHERE preguntacerrada.id = plantillaencuesta.id) LIKE ?';
		$where_clause[] = '(SELECT enunciado FROM preguntaabierta WHERE preguntaabierta.id = plantillaencuesta.id) LIKE ?';
		$where_clause[] = '(SELECT fecha FROM encuesta WHERE encuesta.id = plantillaencuesta.id) LIKE ?';
		$f = "%$filter%";
		
		return R::findAll('ies', implode(' OR ', $where_clause) , [ $f,$f,$f,$f,$f ] );
		
	}

	/**
	* delete MODEL action autogenerated by CASEIGNITER
	*/
	public function delete( $id ) {
		$bean = R::load('plantillaencuesta', $id );
		R::trash( $bean );
	}
	
	/**
	* get_by_id MODEL action autogenerated by CASEIGNITER
	*/
	public function get_by_id( $id ) {
		return R::load('plantillaencuesta', $id ) ;
	}
	
}
?>