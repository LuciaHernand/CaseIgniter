<?php
/**
* Model code autogenerated by CASE IGNITER
*/
class cursoacademico_model extends CI_Model {


	/**
	* create MODEL action autogenerated by CASE IGNITER
	*/
	public function create( $anyoini, $ocurre, $tieneim, $trabaja ) {

	$bean = R::dispense( 'cursoacademico' );


	// Regular attribute
	$bean -> setMeta("buildcommand.unique" , array(array('anyoini')) );
	$bean -> anyoini = $anyoini;

	// "many to one" attribute
	if ( $ocurre != null && $ocurre != 0) {
		$bean -> ocurre = R::load('ies',$ocurre);
	}
				
									
	// "one to many" attribute
	foreach ($tieneim as $id) {
		$o2m = R::load('imparticion', $id);
		$bean -> alias('tieneim') ->ownImparticionList[] = $o2m;
	}
				
									
	// "many to many" attribute
	foreach ($trabaja as $id) {
		$another_bean = R::load('usuario', $id);
		$m2m = R::dispense('trabaja');
		R::store($bean);
		$m2m -> cursoacademico = $bean;
		$m2m -> usuario = $another_bean;
		R::store($m2m);
	}
				
				
	R::store($bean);

	return $bean->id;
}


	/**
	* update MODEL action autogenerated by CASE IGNITER
	*/
	public function update( $id, $anyoini, $ocurre, $tieneim, $trabaja ) {

	$bean = R::load( 'cursoacademico', $id );


	// Regular attribute
	$bean -> anyoini = $anyoini;
	// "many to one" attribute
	if ( $ocurre != null ) {
		$bean -> ocurre = ( $ocurre != 0 ? R::load('ies',$ocurre) : null );
		R::store($bean);
	}

				
	// "one to many" attribute (O2M)

	foreach ($bean->alias('tieneim')->ownImparticionList as $tieneim_bean ) {
		$key = array_search( $tieneim_bean->tieneim->id, $tieneim );
		
		if ($key !== false) { // O2M we keep only the keys to add
			unset($tieneim[$key]);
		}
		else { // O2M Element to be deleted
			R::store($bean);
			$tieneim_bean -> tieneim = null;
			R::store($tieneim_bean);
		}
	}

	// O2M Elements to be added
	foreach ($tieneim as $idf) {
		$o2m = R::load('imparticion', $idf);
		$o2m -> tieneim = $bean;
		R::store($o2m);
	}

				
	// "many to many" attribute (M2M)
	
	foreach ($bean->ownTrabajaList as $trabaja_bean ) {
		$key = array_search( $trabaja_bean->usuario->id, $trabaja );
		
		if ($key !== false) { // M2M we keep only the keys to add
			unset($trabaja[$key]);
		}
		else { // M2M Element to be deleted
			R::store($bean);
			R::trash($trabaja_bean);
		}
	}

	// M2M Elements to be added
	foreach ($trabaja as $idf) {
		$another_bean = R::load('usuario', $idf);
		$m2m = R::dispense('trabaja');
		$m2m -> cursoacademico = $bean;
		$m2m -> usuario = $another_bean;
		R::store($m2m);
	}

	
	R::store($bean);
}


	/**
	* get_all MODEL action autogenerated by CASE IGNITER
	*/
	public function get_all() {
		return R::findAll('cursoacademico');
	}

	/**
	* get_filtered MODEL action autogenerated by CASE IGNITER
	*/
	public function get_filtered($filter) {

		$where_clause[] = 'anyoini LIKE ?';
		$where_clause[] = '(SELECT nombre FROM ies WHERE ies.id = cursoacademico.id) LIKE ?';
		$where_clause[] = '(SELECT nombre FROM imparticion WHERE imparticion.id = cursoacademico.id) LIKE ?';
		$where_clause[] = '(SELECT nombre FROM usuario WHERE usuario.id = cursoacademico.id) LIKE ?';
		$f = "%$filter%";
		
		return R::findAll('ies', implode(' OR ', $where_clause) , [ $f,$f,$f,$f ] );
		
	}

	/**
	* delete MODEL action autogenerated by CASEIGNITER
	*/
	public function delete( $id ) {
		$bean = R::load('cursoacademico', $id );
		R::trash( $bean );
	}
	
	/**
	* get_by_id MODEL action autogenerated by CASEIGNITER
	*/
	public function get_by_id( $id ) {
		return R::load('cursoacademico', $id ) ;
	}
	
}
?>