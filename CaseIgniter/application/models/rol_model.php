<?php
/**
* Model code autogenerated by CASE IGNITER
*/
class rol_model extends CI_Model {


	/**
	* create MODEL action autogenerated by CASE IGNITER
	*/
	public function create( $nombre, $descripcion, $roles) {

	R::begin();
	try {

	$bean = R::dispense( 'rol' );
	$id_bean = R::store( $bean );
	
	// Regular attribute
	$bean -> nombre = $nombre;

	// Regular attribute
	$bean -> descripcion = $descripcion;
					
	// "many to many" attribute
	foreach ($roles as $id) {
		$another_bean = R::load('gatito', $id);
		$m2m = R::dispense('roles');
		R::store($bean);
		$m2m -> rol = $bean;
		$m2m -> gatito = $another_bean;
		R::store($m2m);
	}
				
				
	R::store($bean);
	R::commit();
	return $bean->id;

	}
	catch (Exception $e) {
		R::rollback();
		throw $e;
	}

	}

	/**
	* update MODEL action autogenerated by CASE IGNITER
	*/
	public function update( $id, $nombre, $descripcion, $roles) {

	R::begin();

	try {
	$bean = R::load( 'rol', $id );
					
	// Regular attribute
	$bean -> nombre = $nombre;
						
	// Regular attribute
	$bean -> descripcion = $descripcion;
					
	// "many to many" attribute (M2M)
	
	
	foreach ($bean->ownRolesList as $roles_bean ) {
		$key = array_search( $roles_bean->gatito->id, $roles );
		
		if ($key !== false) { // M2M we keep only the keys to add
			unset($roles[$key]);
		}
		else { // M2M Element to be deleted
			R::store($bean);
			R::trash($roles_bean);
		}
	}

	// M2M Elements to be added
	foreach ($roles as $idf) {
		$another_bean = R::load('gatito', $idf);
		$m2m = R::dispense('roles');
		$m2m -> rol = $bean;
		$m2m -> gatito = $another_bean;
		R::store($m2m);
	}
	

	
	R::store($bean);
	R::commit();
	}
	catch (Exception $e) {
		R::rollback();
		throw $e;
	}

	}

	/**
	* get_all MODEL action autogenerated by CASE IGNITER
	*/
	public function get_all() {
		return R::findAll('rol');
	}

	/**
	* get_filtered MODEL action autogenerated by CASE IGNITER
	*/
	public function get_filtered($filter) {

		$where_clause = [ ];

		$where_clause[] = 'nombre LIKE ?';
		$where_clause[] = 'descripcion LIKE ?';
		$where_clause[] = '(SELECT count(*) FROM gatito WHERE nombre LIKE ? AND gatito.id IN (SELECT gatito_id FROM roles WHERE rol_id = rol.id)) > 0';
		$f = "%$filter%";
		
		return R::findAll('rol', implode(' OR ', $where_clause) , [ $f,$f,$f ] );
		
	}

	/**
	* delete MODEL action autogenerated by CASEIGNITER
	*/
	public function delete( $id ) {
		$bean = R::load('rol', $id );

		R::trash( $bean );
	}	
	/**
	* get_by_id MODEL action autogenerated by CASEIGNITER
	*/
	public function get_by_id( $id ) {
		return R::load('rol', $id ) ;
	}
		
	/**
	* get_default_rol_id MODEL action autogenerated by CASEIGNITER
	*/
	public function get_default_rol() {
		return R::findOne('rol', ' nombre = ? ' , [ 'default' ]);
	}

}
?>