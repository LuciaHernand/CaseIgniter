<?php
/**
* Model code autogenerated by CASE IGNITER
*/
class categoria_model extends CI_Model {


	/**
	* create MODEL action autogenerated by CASE IGNITER
	*/
	public function create( $nombre, $contienepc, $contienepa ) {

	$bean = R::dispense( 'categoria' );


	// Regular attribute
	$bean -> setMeta("buildcommand.unique" , array(array('nombre')) );
	$bean -> nombre = $nombre;
					
	// "one to many" attribute
	foreach ($contienepc as $id) {
		$o2m = R::load('preguntacerrada', $id);
		$bean -> alias('contienepc') ->ownPreguntacerradaList[] = $o2m;
	}
				
									
	// "one to many" attribute
	foreach ($contienepa as $id) {
		$o2m = R::load('preguntaabierta', $id);
		$bean -> alias('contienepa') ->ownPreguntaabiertaList[] = $o2m;
	}
				
				
	R::store($bean);

	return $bean->id;
}


	/**
	* update MODEL action autogenerated by CASE IGNITER
	*/
	public function update( $id, $nombre, $contienepc, $contienepa ) {

	$bean = R::load( 'categoria', $id );


	// Regular attribute
	$bean -> nombre = $nombre;
				
	// "one to many" attribute (O2M)

	foreach ($bean->alias('contienepc')->ownPreguntacerradaList as $contienepc_bean ) {
		$key = array_search( $contienepc_bean->contienepc->id, $contienepc );
		
		if ($key !== false) { // O2M we keep only the keys to add
			unset($contienepc[$key]);
		}
		else { // O2M Element to be deleted
			R::store($bean);
			$contienepc_bean -> contienepc = null;
			R::store($contienepc_bean);
		}
	}

	// O2M Elements to be added
	foreach ($contienepc as $idf) {
		$o2m = R::load('preguntacerrada', $idf);
		$o2m -> contienepc = $bean;
		R::store($o2m);
	}

				
	// "one to many" attribute (O2M)

	foreach ($bean->alias('contienepa')->ownPreguntaabiertaList as $contienepa_bean ) {
		$key = array_search( $contienepa_bean->contienepa->id, $contienepa );
		
		if ($key !== false) { // O2M we keep only the keys to add
			unset($contienepa[$key]);
		}
		else { // O2M Element to be deleted
			R::store($bean);
			$contienepa_bean -> contienepa = null;
			R::store($contienepa_bean);
		}
	}

	// O2M Elements to be added
	foreach ($contienepa as $idf) {
		$o2m = R::load('preguntaabierta', $idf);
		$o2m -> contienepa = $bean;
		R::store($o2m);
	}


	R::store($bean);
}


	/**
	* get_all MODEL action autogenerated by CASE IGNITER
	*/
	public function get_all() {
		return R::findAll('categoria');
	}

	/**
	* get_filtered MODEL action autogenerated by CASE IGNITER
	*/
	public function get_filtered($filter) {

		$where_clause[] = 'nombre LIKE ?';
		$where_clause[] = '(SELECT nombre FROM preguntacerrada WHERE preguntacerrada.id = categoria.id) LIKE ?';
		$where_clause[] = '(SELECT enunciado FROM preguntaabierta WHERE preguntaabierta.id = categoria.id) LIKE ?';
		$f = "%$filter%";
		
		return R::findAll('ies', implode(' OR ', $where_clause) , [ $f,$f,$f ] );
		
	}

	/**
	* delete MODEL action autogenerated by CASEIGNITER
	*/
	public function delete( $id ) {
		$bean = R::load('categoria', $id );
		R::trash( $bean );
	}
	
	/**
	* get_by_id MODEL action autogenerated by CASEIGNITER
	*/
	public function get_by_id( $id ) {
		return R::load('categoria', $id ) ;
	}
	
}
?>