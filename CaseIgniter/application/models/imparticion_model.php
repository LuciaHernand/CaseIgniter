<?php
/**
* Model code autogenerated by CASE IGNITER
*/
class imparticion_model extends CI_Model {


	/**
	* create MODEL action autogenerated by CASE IGNITER
	*/
	public function create( $nombre, $desarrolla, $impartida, $refierea, $asociaa, $realizada, $tieneim ) {

	$bean = R::dispense( 'imparticion' );


	// Regular attribute
	$bean -> setMeta("buildcommand.unique" , array(array('nombre')) );
	$bean -> nombre = $nombre;

	// "many to one" attribute
	if ( $desarrolla != null && $desarrolla != 0) {
		$bean -> desarrolla = R::load('usuario',$desarrolla);
	}
				
				
	// "many to one" attribute
	if ( $impartida != null && $impartida != 0) {
		$bean -> impartida = R::load('grupo',$impartida);
	}
				
				
	// "many to one" attribute
	if ( $refierea != null && $refierea != 0) {
		$bean -> refierea = R::load('asignatura',$refierea);
	}
				
									
	// "many to many" attribute
	foreach ($asociaa as $id) {
		$another_bean = R::load('plantillaencuesta', $id);
		$m2m = R::dispense('asociaa');
		R::store($bean);
		$m2m -> imparticion = $bean;
		$m2m -> plantillaencuesta = $another_bean;
		R::store($m2m);
	}
				
									
	// "one to many" attribute
	foreach ($realizada as $id) {
		$o2m = R::load('encuesta', $id);
		$bean -> alias('realizada') ->ownEncuestaList[] = $o2m;
	}
				
				
	// "many to one" attribute
	if ( $tieneim != null && $tieneim != 0) {
		$bean -> tieneim = R::load('cursoacademico',$tieneim);
	}
				
				
	R::store($bean);

	return $bean->id;
}


	/**
	* update MODEL action autogenerated by CASE IGNITER
	*/
	public function update( $id, $nombre, $desarrolla, $impartida, $refierea, $asociaa, $realizada, $tieneim ) {

	$bean = R::load( 'imparticion', $id );


	// Regular attribute
	$bean -> nombre = $nombre;
	// "many to one" attribute
	if ( $desarrolla != null ) {
		$bean -> desarrolla = ( $desarrolla != 0 ? R::load('usuario',$desarrolla) : null );
		R::store($bean);
	}

	// "many to one" attribute
	if ( $impartida != null ) {
		$bean -> impartida = ( $impartida != 0 ? R::load('grupo',$impartida) : null );
		R::store($bean);
	}

	// "many to one" attribute
	if ( $refierea != null ) {
		$bean -> refierea = ( $refierea != 0 ? R::load('asignatura',$refierea) : null );
		R::store($bean);
	}

				
	// "many to many" attribute (M2M)
	
	foreach ($bean->ownAsociaaList as $asociaa_bean ) {
		$key = array_search( $asociaa_bean->plantillaencuesta->id, $asociaa );
		
		if ($key !== false) { // M2M we keep only the keys to add
			unset($asociaa[$key]);
		}
		else { // M2M Element to be deleted
			R::store($bean);
			R::trash($asociaa_bean);
		}
	}

	// M2M Elements to be added
	foreach ($asociaa as $idf) {
		$another_bean = R::load('plantillaencuesta', $idf);
		$m2m = R::dispense('asociaa');
		$m2m -> imparticion = $bean;
		$m2m -> plantillaencuesta = $another_bean;
		R::store($m2m);
	}

					
	// "one to many" attribute (O2M)

	foreach ($bean->alias('realizada')->ownEncuestaList as $realizada_bean ) {
		$key = array_search( $realizada_bean->realizada->id, $realizada );
		
		if ($key !== false) { // O2M we keep only the keys to add
			unset($realizada[$key]);
		}
		else { // O2M Element to be deleted
			R::store($bean);
			$realizada_bean -> realizada = null;
			R::store($realizada_bean);
		}
	}

	// O2M Elements to be added
	foreach ($realizada as $idf) {
		$o2m = R::load('encuesta', $idf);
		$o2m -> realizada = $bean;
		R::store($o2m);
	}

	// "many to one" attribute
	if ( $tieneim != null ) {
		$bean -> tieneim = ( $tieneim != 0 ? R::load('cursoacademico',$tieneim) : null );
		R::store($bean);
	}


	R::store($bean);
}


	/**
	* get_all MODEL action autogenerated by CASE IGNITER
	*/
	public function get_all() {
		return R::findAll('imparticion');
	}

	/**
	* get_filtered MODEL action autogenerated by CASE IGNITER
	*/
	public function get_filtered($filter) {

		$where_clause[] = 'nombre LIKE ?';
		$where_clause[] = '(SELECT nombre FROM usuario WHERE usuario.id = imparticion.id) LIKE ?';
		$where_clause[] = '(SELECT nombre FROM grupo WHERE grupo.id = imparticion.id) LIKE ?';
		$where_clause[] = '(SELECT nombre FROM asignatura WHERE asignatura.id = imparticion.id) LIKE ?';
		$where_clause[] = '(SELECT nombre FROM plantillaencuesta WHERE plantillaencuesta.id = imparticion.id) LIKE ?';
		$where_clause[] = '(SELECT fecha FROM encuesta WHERE encuesta.id = imparticion.id) LIKE ?';
		$where_clause[] = '(SELECT anyoini FROM cursoacademico WHERE cursoacademico.id = imparticion.id) LIKE ?';
		$f = "%$filter%";
		
		return R::findAll('ies', implode(' OR ', $where_clause) , [ $f,$f,$f,$f,$f,$f,$f ] );
		
	}

	/**
	* delete MODEL action autogenerated by CASEIGNITER
	*/
	public function delete( $id ) {
		$bean = R::load('imparticion', $id );
		R::trash( $bean );
	}
	
	/**
	* get_by_id MODEL action autogenerated by CASEIGNITER
	*/
	public function get_by_id( $id ) {
		return R::load('imparticion', $id ) ;
	}
	
}
?>