<?php
/**
* Model code autogenerated by CASE IGNITER
*/
class perrito_model extends CI_Model {


	/**
	* create MODEL action autogenerated by CASE IGNITER
	*/
	public function create( $nombre, $loginname, $password, $roles ) {

	$bean = R::dispense( 'perrito' );
	$id_bean = R::store( $bean );


	// Regular attribute
	$bean -> nombre = $nombre;

	// Regular attribute
	$bean -> loginname = $loginname;

	// Regular attribute
	$bean -> password = $password;
					
	// "many to many" attribute
	foreach ($roles as $id) {
		$another_bean = R::load('rol', $id);
		$m2m = R::dispense('roles');
		R::store($bean);
		$m2m -> perrito = $bean;
		$m2m -> rol = $another_bean;
		R::store($m2m);
	}
				
				
	R::store($bean);

	return $bean->id;
}


	/**
	* update MODEL action autogenerated by CASE IGNITER
	*/
	public function update( $id, $nombre, $loginname, $password, $roles ) {

	$bean = R::load( 'perrito', $id );

					
	// Regular attribute
	$bean -> nombre = $nombre;
						
	// Regular attribute
	$bean -> loginname = $loginname;
						
	// Regular attribute
	$bean -> password = $password;
					
	// "many to many" attribute (M2M)
	
	foreach ($bean->ownRolesList as $roles_bean ) {
		$key = array_search( $roles_bean->rol->id, $roles );
		
		if ($key !== false) { // M2M we keep only the keys to add
			unset($roles[$key]);
		}
		else { // M2M Element to be deleted
			R::store($bean);
			R::trash($roles_bean);
		}
	}

	// M2M Elements to be added
	foreach ($roles as $idf) {
		$another_bean = R::load('rol', $idf);
		$m2m = R::dispense('roles');
		$m2m -> perrito = $bean;
		$m2m -> rol = $another_bean;
		R::store($m2m);
	}

	
	R::store($bean);
}


	/**
	* get_all MODEL action autogenerated by CASE IGNITER
	*/
	public function get_all() {
		return R::findAll('perrito');
	}

	/**
	* get_filtered MODEL action autogenerated by CASE IGNITER
	*/
	public function get_filtered($filter) {

		$where_clause = [ ];

		$where_clause[] = 'nombre LIKE ?';
		$where_clause[] = 'loginname LIKE ?';
		$where_clause[] = 'password LIKE ?';
		$where_clause[] = '(SELECT count(*) FROM rol WHERE nombre LIKE ? AND rol.id IN (SELECT rol_id FROM roles WHERE perrito_id = perrito.id)) > 0';
		$f = "%$filter%";
		
		return R::findAll('perrito', implode(' OR ', $where_clause) , [ $f,$f,$f,$f ] );
		
	}

	/**
	* delete MODEL action autogenerated by CASEIGNITER
	*/
	public function delete( $id ) {
		$bean = R::load('perrito', $id );

		R::trash( $bean );
	}	
	/**
	* get_by_id MODEL action autogenerated by CASEIGNITER
	*/
	public function get_by_id( $id ) {
		return R::load('perrito', $id ) ;
	}
		/**
	 * create MODEL action autogenerated by CASE IGNITER
	 */
	public function get_by_loginname( $loginname ) {
		return R::findOne( 'perrito', ' loginname = ? ', [ $loginname ] );
	}
			
}
?>